package org.myorg;

import java.io.IOException;
import java.util.Iterator;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

/*
 * MeiNoteCountReducer is the class used for the reduce function.
 * 
 */
public class MeiNoteCountReducer extends
		Reducer<Text, IntWritable, Text, IntWritable> {

	/*
	 * The reduce() method is called for every unique key generated by the map method.
	 * It's purpose is to sum all occurrences of a unique key into one <key, value> pair.
	 * As with the class, this method is used as the Combiner of this Hadoop application
	 * for local aggregation purposes.
	 * 
	 */
	@Override
	protected void reduce(Text key, Iterable<IntWritable> values, Context context) 
			throws IOException, InterruptedException {
		int sum = 0;
		Iterator<IntWritable> valuesIterator = values.iterator();
		
		while (valuesIterator.hasNext()) {
			sum += valuesIterator.next().get();
		}
		context.write(key, new IntWritable(sum));
	}
}
